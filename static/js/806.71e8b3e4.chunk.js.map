{"version":3,"file":"static/js/806.71e8b3e4.chunk.js","mappings":"mOAEaA,EAAcC,EAAAA,GAAAA,IAAU,0FAKxBC,EAAOD,EAAAA,GAAAA,GAAS,qFAOhBE,EAAOF,EAAAA,GAAAA,GAAS,kPAShBG,EAAQH,EAAAA,GAAAA,IAAU,mQAkBlBI,EAAQJ,EAAAA,GAAAA,IAAU,+C,SCA/B,EAnCgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,KAQpC,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIA,EAAMC,OAAO,GACjC,GAAG,CAACV,KAGF,SAACN,EAAW,WACV,SAACE,EAAI,UACFO,EAAaQ,OAAS,EACrBR,EAAaS,KAAI,gBAAGC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAAqBC,EAAI,EAAhBC,WAAU,OAC7C,UAACnB,EAAI,YACH,UAACC,EAAK,YACJ,oCAAYe,MACZ,kCAAU,IAAII,KAAKF,GAAMG,wBAE3B,uBAAIJ,MALKD,EAMJ,KAGT,SAACd,EAAK,0DAKhB,C,8LCvBAoB,EAAAA,GAAAA,SAAAA,QAAsB,gCACtB,IAAMC,EAAW,mCAEV,SAAeC,IAAW,+BAKhC,wCALM,sFACkD,OAAjDC,EAAK,qCAAiCF,GAAW,SACjCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,KAAKC,SAAO,4CAC5B,sBAEM,SAAeC,EAAe,GAAD,+BAKnC,wCALM,WAA8BC,GAAK,yEACuC,OAAzEL,EAAK,+BAA2BF,EAAW,iCAAyBO,EAAK,iCACzDR,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,MAAI,4CACpB,sBAEM,SAAeI,EAAa,GAAD,+BAKjC,wCALM,WAA4BC,GAAE,yEACa,OAA1CP,EAAK,gBAAYO,EAAE,oBAAYT,EAAW,4BAC1BD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,MAAI,4CACpB,sBAEM,SAAeM,EAAgB,GAAD,+BAIpC,wCAJM,WAA+BD,GAAE,yEACkB,OAAlDP,EAAK,gBAAYO,EAAE,4BAAoBT,EAAW,4BAClCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBACNA,EAAQC,KAAKO,MAAI,4CACzB,sBAEM,SAAezB,EAAgB,GAAD,+BAKpC,wCALM,WAA+BuB,GAAE,yEACkB,OAAlDP,EAAK,gBAAYO,EAAE,4BAAoBT,EAAW,4BAClCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,KAAKC,SAAO,4CAC5B,sB","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsCard = styled.div`\n  padding-top: 15px;\n  border-top: 3px solid rgb(52, 162, 212);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 15px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  line-height: 1.2;\n  b {\n    font-size: 18px;\n  }\n\n  p {\n    font-weight: 600;\n    font-size: 16px;\n\n    color: grey;\n  }\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'components/Services/Api';\nimport PropTypes from 'prop-types';\nimport { ReviewsCard, List, Item, Thumb, Error } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setMovieReviews)\n      .catch(error => error.message);\n  }, [movieId]);\n\n  return (\n    <ReviewsCard>\n      <List>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(({ author, content, created_at: date }) => (\n            <Item key={author}>\n              <Thumb>\n                <b>Author: {author}</b>\n                <p>Date: {new Date(date).toLocaleString()}</p>\n              </Thumb>\n              <p>{content}</p>\n            </Item>\n          ))\n        ) : (\n          <Error>We don't have any reviews for this movie</Error>\n        )}\n      </List>\n    </ReviewsCard>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.object,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = `https://pixabay.com/api/`;\n// const PIXABAY_KEY = `29626479-30d098b137805aefe019417a9`;\n\n// export async function apiQuery(nextQuery, page = 1) {\n//   const fetch = `?q=${nextQuery}&page=${page}&key=${PIXABAY_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n//   const respons = await axios.get(fetch);\n\n//   return respons;\n// }\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst PIXABAY_KEY = `47d4e1a1a10be98644abcf2b38417f6e`;\n\nexport async function apiTrending() {\n  const fetch = `trending/movie/day?api_key=${PIXABAY_KEY}`;\n  const respons = await axios.get(fetch);\n  //   console.log(respons.data.results);\n  return respons.data.results;\n}\n\nexport async function apiSearchQuery(query) {\n  const fetch = `search/movie?api_key=${PIXABAY_KEY}&language=en-US&query=${query}&include_adult=false`;\n  const respons = await axios.get(fetch);\n  //   console.log(respons.data.results);\n  return respons.data;\n}\n\nexport async function getMovieByID(id) {\n  const fetch = `movie/${id}?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  // console.log(respons.data);\n  return respons.data;\n}\n\nexport async function getMovieCredits(id) {\n  const fetch = `movie/${id}/credits?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  return respons.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const fetch = `movie/${id}/reviews?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  // console.log(respons.data.results);\n  return respons.data.results;\n}\n"],"names":["ReviewsCard","styled","List","Item","Thumb","Error","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","catch","error","message","length","map","author","content","date","created_at","Date","toLocaleString","axios","PIXABAY_KEY","apiTrending","fetch","respons","data","results","apiSearchQuery","query","getMovieByID","id","getMovieCredits","cast"],"sourceRoot":""}