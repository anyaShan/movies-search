{"version":3,"file":"static/js/219.0aacc1fd.chunk.js","mappings":"iOAEaA,EAAWC,EAAAA,GAAAA,IAAU,0FAKrBC,EAAOD,EAAAA,GAAAA,GAAS,mMAYhBE,EAAOF,EAAAA,GAAAA,GAAS,woBAkChBG,EAAQH,EAAAA,GAAAA,IAAU,+C,SCP/B,EAxCa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAQ9B,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIA,EAAMC,OAAO,GACjC,GAAG,CAACV,KAGF,SAACL,EAAQ,WACP,SAACE,EAAI,UACFM,EAAUQ,OAAS,EAClBR,EAAUS,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAS,EAATA,UAAWC,EAAI,EAAJA,KAAoBC,EAAI,EAAlBC,aAAY,OAChD,UAACnB,EAAI,YACH,gBACEoB,IACEF,EAAI,yCACkCA,GAAI,+EAG5CG,IAAG,UAAKJ,MAEV,uBAAIA,KACJ,uCAAeD,OAVND,EAWJ,KAGT,SAACd,EAAK,uCAKhB,C,8LC5BAqB,EAAAA,GAAAA,SAAAA,QAAsB,gCACtB,IAAMC,EAAW,mCAEV,SAAeC,IAAW,+BAKhC,wCALM,sFACkD,OAAjDC,EAAK,qCAAiCF,GAAW,SACjCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,KAAKC,SAAO,4CAC5B,sBAEM,SAAeC,EAAe,GAAD,+BAKnC,wCALM,WAA8BC,GAAK,yEACuC,OAAzEL,EAAK,+BAA2BF,EAAW,iCAAyBO,EAAK,iCACzDR,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,MAAI,4CACpB,sBAEM,SAAeI,EAAa,GAAD,+BAKjC,wCALM,WAA4BhB,GAAE,yEACa,OAA1CU,EAAK,gBAAYV,EAAE,oBAAYQ,EAAW,4BAC1BD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,MAAI,4CACpB,sBAEM,SAAenB,EAAgB,GAAD,+BAIpC,wCAJM,WAA+BO,GAAE,yEACkB,OAAlDU,EAAK,gBAAYV,EAAE,4BAAoBQ,EAAW,4BAClCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBACNA,EAAQC,KAAKK,MAAI,4CACzB,sBAEM,SAAeC,EAAgB,GAAD,+BAKpC,wCALM,WAA+BlB,GAAE,yEACkB,OAAlDU,EAAK,gBAAYV,EAAE,4BAAoBQ,EAAW,4BAClCD,EAAAA,GAAAA,IAAUG,GAAO,KAAD,EAAzB,OAAPC,EAAO,yBAENA,EAAQC,KAAKC,SAAO,4CAC5B,sB","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastCard = styled.div`\n  padding-top: 15px;\n  border-top: 3px solid rgb(52, 162, 212);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-between;\n\n  /* font-weight: 600;\n  font-size: 16px;\n  line-height: 1;\n  color: grey; */\n`;\n\nexport const Item = styled.li`\n  padding: 10px;\n  width: 200px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  /* padding: 15px; */\n  border-radius: 15px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  img {\n    border-radius: 10px;\n    object-fit: cover;\n    margin-bottom: 10px;\n  }\n\n  b {\n    text-align: center;\n    margin-bottom: 10px;\n\n    font-size: 16px;\n    line-height: 1;\n    color: grey;\n  }\n  p {\n    text-align: center;\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1;\n    color: grey;\n  }\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'components/Services/Api';\nimport PropTypes from 'prop-types';\nimport { CastCard, List, Item, Error } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(setMovieCast)\n      .catch(error => error.message);\n  }, [movieId]);\n\n  return (\n    <CastCard>\n      <List>\n        {movieCast.length > 0 ? (\n          movieCast.map(({ id, character, name, profile_path: path }) => (\n            <Item key={id}>\n              <img\n                src={\n                  path\n                    ? `https://image.tmdb.org/t/p/w300${path}`\n                    : `https://i.pinimg.com/originals/7b/3f/ba/7b3fba069b7942021bf680e2d3170bf8.jpg`\n                }\n                alt={`${name}`}\n              />\n              <b>{name}</b>\n              <p>Character: {character}</p>\n            </Item>\n          ))\n        ) : (\n          <Error>The movie has no cast</Error>\n        )}\n      </List>\n    </CastCard>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.object,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = `https://pixabay.com/api/`;\n// const PIXABAY_KEY = `29626479-30d098b137805aefe019417a9`;\n\n// export async function apiQuery(nextQuery, page = 1) {\n//   const fetch = `?q=${nextQuery}&page=${page}&key=${PIXABAY_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n//   const respons = await axios.get(fetch);\n\n//   return respons;\n// }\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst PIXABAY_KEY = `47d4e1a1a10be98644abcf2b38417f6e`;\n\nexport async function apiTrending() {\n  const fetch = `trending/movie/day?api_key=${PIXABAY_KEY}`;\n  const respons = await axios.get(fetch);\n  //   console.log(respons.data.results);\n  return respons.data.results;\n}\n\nexport async function apiSearchQuery(query) {\n  const fetch = `search/movie?api_key=${PIXABAY_KEY}&language=en-US&query=${query}&include_adult=false`;\n  const respons = await axios.get(fetch);\n  //   console.log(respons.data.results);\n  return respons.data;\n}\n\nexport async function getMovieByID(id) {\n  const fetch = `movie/${id}?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  // console.log(respons.data);\n  return respons.data;\n}\n\nexport async function getMovieCredits(id) {\n  const fetch = `movie/${id}/credits?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  return respons.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const fetch = `movie/${id}/reviews?api_key=${PIXABAY_KEY}&language=en-US`;\n  const respons = await axios.get(fetch);\n  // console.log(respons.data.results);\n  return respons.data.results;\n}\n"],"names":["CastCard","styled","List","Item","Error","movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCredits","then","catch","error","message","length","map","id","character","name","path","profile_path","src","alt","axios","PIXABAY_KEY","apiTrending","fetch","respons","data","results","apiSearchQuery","query","getMovieByID","cast","getMovieReviews"],"sourceRoot":""}